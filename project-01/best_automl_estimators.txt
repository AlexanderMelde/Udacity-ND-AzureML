#
# for e in best_automl_model.steps[1][1].estimators:
#    print(e)
#    

('52', Pipeline(memory=None,
         steps=[('standardscalerwrapper',
                 <azureml.automl.runtime.shared.model_wrappers.StandardScalerWrapper object at 0x7fc66071a7f0>),
                ('xgboostclassifier',
                 XGBoostClassifier(base_score=0.5, booster='gbtree',
                                   colsample_bylevel=1, colsample_bynode=1,
                                   colsample_bytree=0.6, eta=0.5, gamma=0,
                                   learning_rate=0.1, max_delta_step=0,
                                   max_depth=7, max_leaves=31,
                                   min_child_weight=1, missing=nan,
                                   n_estimators=50, n_jobs=1, nthread=None,
                                   objective='reg:logistic', random_state=0,
                                   reg_alpha=0, reg_lambda=2.5,
                                   scale_pos_weight=1, seed=None, silent=None,
                                   subsample=1, tree_method='auto', verbose=-10,
                                   verbosity=0))],
         verbose=False))
('31', Pipeline(memory=None,
         steps=[('standardscalerwrapper',
                 <azureml.automl.runtime.shared.model_wrappers.StandardScalerWrapper object at 0x7fc660588780>),
                ('xgboostclassifier',
                 XGBoostClassifier(base_score=0.5, booster='gbtree',
                                   colsample_bylevel=1, colsample_bynode=1,
                                   colsample_bytree=0.7, eta=0.2, gamma=1,
                                   learning_rate=0.1, max_delta_step=0,
                                   max_depth=5, max_leaves=0,
                                   min_child_weight=1, missing=nan,
                                   n_estimators=25, n_jobs=1, nthread=None,
                                   objective='reg:logistic', random_state=0,
                                   reg_alpha=0, reg_lambda=1.1458333333333335,
                                   scale_pos_weight=1, seed=None, silent=None,
                                   subsample=1, tree_method='auto', verbose=-10,
                                   verbosity=0))],
         verbose=False))
('1', Pipeline(memory=None,
         steps=[('maxabsscaler', MaxAbsScaler(copy=True)),
                ('xgboostclassifier',
                 XGBoostClassifier(base_score=0.5, booster='gbtree',
                                   colsample_bylevel=1, colsample_bynode=1,
                                   colsample_bytree=1, gamma=0,
                                   learning_rate=0.1, max_delta_step=0,
                                   max_depth=3, min_child_weight=1, missing=nan,
                                   n_estimators=100, n_jobs=1, nthread=None,
                                   objective='binary:logistic', random_state=0,
                                   reg_alpha=0, reg_lambda=1,
                                   scale_pos_weight=1, seed=None, silent=None,
                                   subsample=1, tree_method='auto', verbose=-10,
                                   verbosity=0))],
         verbose=False))
('0', Pipeline(memory=None,
         steps=[('maxabsscaler', MaxAbsScaler(copy=True)),
                ('lightgbmclassifier',
                 LightGBMClassifier(boosting_type='gbdt', class_weight=None,
                                    colsample_bytree=1.0,
                                    importance_type='split', learning_rate=0.1,
                                    max_depth=-1, min_child_samples=20,
                                    min_child_weight=0.001, min_split_gain=0.0,
                                    n_estimators=100, n_jobs=1, num_leaves=31,
                                    objective=None, random_state=None,
                                    reg_alpha=0.0, reg_lambda=0.0, silent=True,
                                    subsample=1.0, subsample_for_bin=200000,
                                    subsample_freq=0, verbose=-10))],
         verbose=False))
('51', Pipeline(memory=None,
         steps=[('standardscalerwrapper',
                 <azureml.automl.runtime.shared.model_wrappers.StandardScalerWrapper object at 0x7fc6607cf978>),
                ('xgboostclassifier',
                 XGBoostClassifier(base_score=0.5, booster='gbtree',
                                   colsample_bylevel=1, colsample_bynode=1,
                                   colsample_bytree=0.8, eta=0.3, gamma=10,
                                   learning_rate=0.1, max_delta_step=0,
                                   max_depth=9, max_leaves=7,
                                   min_child_weight=1, missing=nan,
                                   n_estimators=10, n_jobs=1, nthread=None,
                                   objective='reg:logistic', random_state=0,
                                   reg_alpha=0.9375,
                                   reg_lambda=1.9791666666666667,
                                   scale_pos_weight=1, seed=None, silent=None,
                                   subsample=1, tree_method='auto', verbose=-10,
                                   verbosity=0))],
         verbose=False))
('28', Pipeline(memory=None,
         steps=[('sparsenormalizer',
                 <azureml.automl.runtime.shared.model_wrappers.SparseNormalizer object at 0x7fc4d02c4630>),
                ('xgboostclassifier',
                 XGBoostClassifier(base_score=0.5, booster='gbtree',
                                   colsample_bylevel=0.8, colsample_bynode=1,
                                   colsample_bytree=1, eta=0.3, gamma=0,
                                   learning_rate=0.1, max_delta_step=0,
                                   max_depth=7, max_leaves=31,
                                   min_child_weight=1, missing=nan,
                                   n_estimators=100, n_jobs=1, nthread=None,
                                   objective='reg:logistic', random_state=0,
                                   reg_alpha=1.4583333333333335,
                                   reg_lambda=0.20833333333333334,
                                   scale_pos_weight=1, seed=None, silent=None,
                                   subsample=1, tree_method='auto', verbose=-10,
                                   verbosity=0))],
         verbose=False))
('37', Pipeline(memory=None,
         steps=[('sparsenormalizer',
                 <azureml.automl.runtime.shared.model_wrappers.SparseNormalizer object at 0x7fc6603377b8>),
                ('xgboostclassifier',
                 XGBoostClassifier(base_score=0.5, booster='gbtree',
                                   colsample_bylevel=1, colsample_bynode=1,
                                   colsample_bytree=0.6, eta=0.2, gamma=0,
                                   learning_rate=0.1, max_delta_step=0,
                                   max_depth=2, max_leaves=0,
                                   min_child_weight=1, missing=nan,
                                   n_estimators=100, n_jobs=1, nthread=None,
                                   objective='reg:logistic', random_state=0,
                                   reg_alpha=0, reg_lambda=1.0416666666666667,
                                   scale_pos_weight=1, seed=None, silent=None,
                                   subsample=0.9, tree_method='auto',
                                   verbose=-10, verbosity=0))],
         verbose=False))
('47', Pipeline(memory=None,
         steps=[('sparsenormalizer',
                 <azureml.automl.runtime.shared.model_wrappers.SparseNormalizer object at 0x7fc6604feef0>),
                ('xgboostclassifier',
                 XGBoostClassifier(base_score=0.5, booster='gbtree',
                                   colsample_bylevel=1, colsample_bynode=1,
                                   colsample_bytree=1, eta=0.001, gamma=0.1,
                                   learning_rate=0.1, max_delta_step=0,
                                   max_depth=8, max_leaves=0,
                                   min_child_weight=1, missing=nan,
                                   n_estimators=25, n_jobs=1, nthread=None,
                                   objective='reg:logistic', random_state=0,
                                   reg_alpha=0, reg_lambda=2.5,
                                   scale_pos_weight=1, seed=None, silent=None,
                                   subsample=0.5, tree_method='auto',
                                   verbose=-10, verbosity=0))],
         verbose=False))
('15', Pipeline(memory=None,
         steps=[('maxabsscaler', MaxAbsScaler(copy=True)),
                ('sgdclassifierwrapper',
                 SGDClassifierWrapper(alpha=0.0001, class_weight='balanced',
                                      eta0=0.001, fit_intercept=True,
                                      l1_ratio=0.836734693877551,
                                      learning_rate='constant',
                                      loss='modified_huber', max_iter=1000,
                                      n_jobs=1, penalty='l2',
                                      power_t=0.2222222222222222,
                                      random_state=None, tol=0.0001))],
         verbose=False))
